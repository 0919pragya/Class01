wlvm

create.sh
#! /bin/sh

set +x
# Start application

mymanaged=${1}
mystatus=0
pushd ${DOMAIN_CONTROL}
. ./env.sh
./start.sh ${DOMAIN_ENVIRONMENT} ${mymanaged}
if [ ${?} -ne 0 ]; then mystatus=1; fi
popd
if [ ${mystatus} -ne 0 ]; then exit 1; fi
# Exit gracefully
exit 0
******************************************************************************************************************************
stop.sh
#! /bin/sh

# Stop application

mymanaged=${1}
mystatus=0
pushd ${DOMAIN_CONTROL}
. ./env.sh
./stop.sh ${DOMAIN_ENVIRONMENT} ${mymanaged}
if [ ${?} -ne 0 ]; then mystatus=1; fi
popd
if [ ${mystatus} -ne 0 ]; then exit 1; fi

# Exit gracefully

exit 0

***************************************************************************************************************************
package-wlst
#! /bin/sh

# Extract server and cluster information

myservers=(`echo ${WLVM_TARGET_SERVERS} | tr ',' ' '`)
myadminserver=${myservers[0]}
myiscluster='false'
if [ ${#myservers[@]} -gt 1 ]; then myiscluster='true'; fi

# Package initialization

if [ -d ${WLVM_PACKAGE} ]; then
  rm -r ${WLVM_PACKAGE}
  if [ ${?} -ne 0 ]; then exit 1; fi
fi

mydeploy=${WLVM_PACKAGE}/stage
mkdir -p ${mydeploy}
if [ ${?} -ne 0 ]; then exit 1; fi

mywlsdeploy=${mydeploy}/ext
mkdir -p ${mywlsdeploy}
if [ ${?} -ne 0 ]; then exit 1; fi

# Package WLVM scripts

cp ${WLVM_HOME}/env-wlst.sh ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@JAVA_HOME@@:${WLVM_TARGET_JRE}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@ORACLE_HOME@@:${WLVM_TARGET_ORACLE}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@WLVM_HOME@@:${WLVM_TARGET_TMP}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@DOMAIN_ENVIRONMENT@@/${WLVM_TARGET}/g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_STAGE@@:${WLVM_TARGET_TMP}/stage:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_DEPLOY@@:${WLVM_DOMAIN_HOME}/ext:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_PARENT@@:${WLVM_DOMAIN_PARENT}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_HOME@@:${WLVM_DOMAIN_HOME}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_VAR@@:${WLVM_TARGET_VAR}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_HOME}/create.sh ${WLVM_PACKAGE}/create.sh
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_HOME}/start.sh ${WLVM_PACKAGE}/start.sh
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_HOME}/stop.sh ${WLVM_PACKAGE}/stop.sh
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_HOME}/kill.sh ${WLVM_PACKAGE}/kill.sh
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_HOME}/clean.sh ${WLVM_PACKAGE}/clean.sh
if [ ${?} -ne 0 ]; then exit 1; fi

# Package domain applications

mydomainapplication=${WLVM_DOMAIN_HOME}/ext/app

myapplications=${mywlsdeploy}/app
mkdir -p ${myapplications}
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_ROOT}/build/deploy/Service/* ${myapplications}
if [ ${?} -ne 0 ]; then exit 1; fi

# Package domain classpath libraries

myclasspathlibraries=${mywlsdeploy}/lib
mkdir -p ${myclasspathlibraries}
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_ROOT}/domain/lib/* ${myclasspathlibraries}
if [ ${?} -ne 0 ]; then exit 1; fi

# Package domain control scripts

mydomainclasspath=${WLVM_DOMAIN_HOME}/ext/lib

mydomainbin=${mywlsdeploy}/bin
mkdir -p ${mydomainbin}
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_ROOT}/domain/bin/* ${mydomainbin}
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@JRE_LINK@@:${WLVM_DOMAIN_PARENT}/jre:g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@PROJECT_DOMAIN_HOME@@:${WLVM_DOMAIN_HOME}:g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@PROJECT_JAR_HOME@@:${mydomainclasspath}:g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@VAR_PROJECT_HOME@@:${WLVM_TARGET_VAR}:g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@PROJECT_LOG_HOME@@:${WLVM_TARGET_LOG}:g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@PROJECT_ADMIN_SERVER@@/${myadminserver}/g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@PROJECT_ADMIN_PORT@@/${WLVM_SERVER_ADMIN_PORT}/g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@PROJECT_MANAGED_PORT@@/${WLVM_SERVER_MANAGED_PORT}/g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@PROJECT_SERVER_LOG_FLAG@@/${WLVM_SERVER_LOG}/g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@APPD_AGENT@@/${WLVM_SERVER_APPD}/g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi

# Package domain config

cp ${WLVM_ROOT}/domain/wlst/* ${mydeploy}
if [ ${?} -ne 0 ]; then exit 1; fi

sed -i -e "s:@@JAVA_HOME@@:${WLVM_TARGET_JRE}:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@ORACLE_HOME@@:${WLVM_TARGET_ORACLE}:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@WLVM_HOME@@:${WLVM_TARGET_TMP}:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_PARENT@@:${WLVM_DOMAIN_PARENT}:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_HOME@@:${WLVM_DOMAIN_HOME}:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_STAGE@@:${WLVM_TARGET_TMP}/stage:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_DEPLOY@@:${WLVM_DOMAIN_HOME}/ext:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@DOMAIN_ENVIRONMENT@@/${WLVM_TARGET}/g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@JRE_LINK@@:${WLVM_TARGET_TMP}/stage/jre:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@WLS_LINK@@:${WLVM_TARGET_TMP}/stage/wls:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_PACKAGE_SECRET_WLST} ${mydeploy}
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_ROOT}/domain/wlst/c2sConfigWlstgenusdomDomain ${mydeploy}
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_ROOT}/domain/wlst/config.py ${mydeploy}
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_ROOT}/domain/wlst/config.py.properties ${mydeploy}
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@USERNAME@@/${WLVM_DOMAIN_USERNAME}/g" ${mydeploy}/config.py.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@PASSWORD@@/${WLVM_DOMAIN_PASSWORD}/g" ${mydeploy}/config.py.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@DOMAINNAME@@/${WLVM_DOMAIN_NAME}/g" ${mydeploy}/config.py.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAINHOME@@:${WLVM_DOMAIN_HOME}:g" ${mydeploy}/config.py.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@DOMAINTARGET@@/${WLVM_TARGET}/g" ${mydeploy}/config.py.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@DOMAINCLUSTER@@/${myiscluster}/g" ${mydeploy}/config.py.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@DOMAINPROD@@/${WLVM_DOMAIN_PRODUCTION}/g" ${mydeploy}/config.py.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@ADMINSERVERNAME@@/${WLVM_SERVER_ADMIN_NAME}/g" ${mydeploy}/config.py.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@ADMINPORT@@/${WLVM_SERVER_ADMIN_PORT}/g" ${mydeploy}/config.py.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@MANAGEDPORT@@/${WLVM_SERVER_MANAGED_PORT}/g" ${mydeploy}/config.py.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@APPVERSION@@/${WLVM_APP_VERSION}/g" ${mydeploy}/config.py.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@APPARCHIVE@@:${mydomainapplication}/genusdom-audit.war:g" ${mydeploy}/config.py.properties
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_ROOT}/domain/wlst/config.sh ${mydeploy}
if [ ${?} -ne 0 ]; then exit 1; fi

# Exit gracefully

exit 0


*********************************************************************************************************************
package-wdt
#! /bin/sh
set -x
WLVM_TARGET_SERVERS='u1062546.test.cloud.fedex.com,u1064310.test.cloud.fedex.com,u1064309.test.cloud.fedex.com,u1064311.test.cloud.fedex.com,u1064312.test.cloud.fedex.com,u1064637.test.cloud.fedex.com;u1064638.test.cloud.fedex.com'
myservers=(`echo ${WLVM_TARGET_SERVERS} | tr ',' ' '`)
echo "myservers: ${myservers}"
#myservers=(u1051234.test.cloud.fedex.com u1051185.test.cloud.fedex.com u1051186.test.cloud.fedex.com u1051187.test.cloud.fedex.com u1059752.test.cloud.fedex.com u1059753.test.cloud.fedex.com u1059755.test.cloud.fedex.com u1061897.test.cloud.fedex.com u1061896.test.cloud.fedex.com u1051543.test.cloud.fedex.com u1060036.test.cloud.fedex.com u1062263.test.cloud.fedex.com u1062264.test.cloud.fedex.com)
myadminserver=${myservers[0]}
myclustersize=${#myservers[@]}
myresourcetarget='genadmin'
if [ ${myclustersize} -gt 1 ]; then myresourcetarget='usdom-alphaCluster,usdom-bravoCluster,usrecogCluster'; fi

# Loop through the servers and set the correct value for WLVM_TARGET_TMP

# if [[ ${#myservers[@]} -lt 13 ]]; then
#     echo "Error: myservers array must have at least 13 elements."
#     exit 1
# elif [[ ${#myservers[@]} -ge 13 ]]; then
#for i in "${!myservers[@]}"; do

    if [[ ${myservers[@]} =~ ^(${myservers[0]}|${myservers[1]}|${myservers[2]}|${myservers[3]}|${myservers[4]}) ]]; then
        WLVM_TARGET_TMP="/var/fedex/genesis/gendom/tmp"
        WLVM_DOMAIN_PARENT="/opt/fedex/genesis/gendom/current"
        WLVM_DOMAIN_HOME="/opt/fedex/genesis/gendom/current/usgendom"
        WLVM_TARGET_VAR="/var/fedex/genesis/gendom"
    elif [[ ${myservers[@]} =~ ^(${myservers[5]}|${myservers[6]}) ]]; then
        WLVM_TARGET_TMP="/var/fedex/genesis/genrecog/tmp"
        WLVM_DOMAIN_PARENT="/opt/fedex/genesis/genrecog/current"
        WLVM_DOMAIN_HOME="/opt/fedex/genesis/genrecog/current/usgendom"
        WLVM_TARGET_VAR="/var/fedex/genesis/genrecog"
    else
        echo "Error: Invalid index value"
        exit 1
    fi
#done
#fi

# for i in "${!myservers[@]}"; 
# do
#   if [ i < 7 ]; then
#       WLVM_TARGET_TMP="${WLVM_TARGET_TMP_VALUE[0]}"
#       WLVM_DOMAIN_PARENT="${WLVM_DOMAIN_PARENT_VALUE[0]}"
#       WLVM_DOMAIN_HOME="${WLVM_DOMAIN_HOME_VALUE[0]}"
#   elif [ i < 9 ]; then
#       WLVM_TARGET_TMP="${WLVM_TARGET_TMP_VALUE[1]}"
#       WLVM_DOMAIN_PARENT="${WLVM_DOMAIN_PARENT_VALUE[1]}"
#       WLVM_DOMAIN_HOME="${WLVM_DOMAIN_HOME_VALUE[1]}"
#   elif [ i < 11 ]; then
#       WLVM_TARGET_TMP="${WLVM_TARGET_TMP_VALUE[2]}"
#       WLVM_DOMAIN_PARENT="${WLVM_DOMAIN_PARENT_VALUE[2]}"
#       WLVM_DOMAIN_HOME="${WLVM_DOMAIN_HOME_VALUE[2]}"
#       WLVM_TARGET_VAR="${WLVM_TARGET_VAR_VALUE[2]}"
#   else
#       WLVM_TARGET_TMP="${WLVM_TARGET_TMP_VALUE[3]}"
#       WLVM_DOMAIN_PARENT="${WLVM_DOMAIN_PARENT_VALUE[3]}"
#       WLVM_DOMAIN_HOME="${WLVM_DOMAIN_HOME_VALUE[3]}"
#       WLVM_TARGET_VAR="${WLVM_TARGET_VAR_VALUE[3]}"
#   fi
# done

# Package initialization

if [ -d ${WLVM_PACKAGE} ]; then
  rm -r ${WLVM_PACKAGE}
  if [ ${?} -ne 0 ]; then exit 1; fi
fi

mydeploy=${WLVM_PACKAGE}/stage
mkdir -p ${mydeploy}
if [ ${?} -ne 0 ]; then exit 1; fi


mywlsdeploy=${mydeploy}/wlsdeploy
mkdir -p ${mywlsdeploy}
if [ ${?} -ne 0 ]; then exit 1; fi

# Package WLVM scripts

cp ${WLVM_HOME}/env-wdt.sh ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@JAVA_HOME@@:${WLVM_TARGET_JRE}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@ORACLE_HOME@@:${WLVM_TARGET_ORACLE}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@WLVM_HOME@@:${WLVM_TARGET_TMP}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@WDT_HOME@@:${WLVM_TARGET_TMP}/stage/weblogic-deploy:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@DOMAIN_ENVIRONMENT@@/${WLVM_TARGET}/g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_STAGE@@:${WLVM_TARGET_TMP}/stage:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_PARENT@@:${WLVM_DOMAIN_PARENT}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_HOME@@:${WLVM_DOMAIN_HOME}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_DEPLOY@@:${WLVM_DOMAIN_HOME}/wlsdeploy:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_VAR@@:${WLVM_TARGET_VAR}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_HOME}/create.sh ${WLVM_PACKAGE}/create.sh
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_HOME}/start.sh ${WLVM_PACKAGE}/start.sh
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_HOME}/stop.sh ${WLVM_PACKAGE}/stop.sh
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_HOME}/kill.sh ${WLVM_PACKAGE}/kill.sh
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_HOME}/clean.sh ${WLVM_PACKAGE}/clean.sh
if [ ${?} -ne 0 ]; then exit 1; fi



#cp ${WORKSPACE}/dist/DMI-1.2.0-RELEASE.war ${WLVM_PACKAGE}/

# Package domain applications

myapplications=${mywlsdeploy}/applications
mkdir -p ${myapplications}
if [ ${?} -ne 0 ]; then exit 1; fi

#cp ${WLVM_ROOT}/dist/DMI-1.2.0-RELEASE.war ${myapplications}/DMI-1.2.0-RELEASE.war

# Package domain classpath libraries

myclasspathlibraries=${mywlsdeploy}/classpathLibraries
mkdir -p ${myclasspathlibraries}
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_ROOT}/domain/lib/* ${myclasspathlibraries}
if [ ${?} -ne 0 ]; then exit 1; fi

# Package domain control scripts

mydomainclasspath=${WLVM_DOMAIN_HOME}/wlsdeploy/classpathLibraries

mydomainbin=${mywlsdeploy}/domainBin
mkdir -p ${mydomainbin}
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_ROOT}/domain/bin/* ${mydomainbin}
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@JRE_LINK@@:${WLVM_DOMAIN_PARENT}/jre:g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@PROJECT_DOMAIN_HOME@@:${WLVM_DOMAIN_HOME}:g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@PROJECT_JAR_HOME@@:${mydomainclasspath}:g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@VAR_PROJECT_HOME@@:${WLVM_TARGET_VAR}:g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@PROJECT_LOG_HOME@@:${WLVM_TARGET_LOG}:g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@PROJECT_ADMIN_SERVER@@/${myadminserver}/g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@PROJECT_ADMIN_PORT@@/${WLVM_SERVER_ADMIN_PORT}/g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@PROJECT_MANAGED_PORT@@/${WLVM_SERVER_MANAGED_PORT}/g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@PROJECT_SERVER_LOG_FLAG@@/${WLVM_SERVER_LOG}/g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@APPD_AGENT@@/${WLVM_SERVER_APPD}/g" ${mydomainbin}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi

# Package domain config

cp ${WLVM_ROOT}/domain/wdt/* ${mydeploy}
if [ ${?} -ne 0 ]; then exit 1; fi

myencryptionsecret=${mydeploy}/model.secret
echo "${WLVM_PACKAGE_SECRET_WDT}" > ${myencryptionsecret}
if [ ${?} -ne 0 ]; then exit 1; fi

sed -i -e "s:@@JAVA_HOME@@:${WLVM_TARGET_JRE}:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@ORACLE_HOME@@:${WLVM_TARGET_ORACLE}:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_PARENT@@:${WLVM_DOMAIN_PARENT}:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@WDT_HOME@@:${WLVM_TARGET_TMP}/stage/weblogic-deploy:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_NAME@@:${WLVM_DOMAIN_NAME}:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@DOMAIN_HOME@@:${WLVM_DOMAIN_HOME}:g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@DOMAIN_ADMIN_PORT@@/${WLVM_SERVER_ADMIN_PORT}/g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@DOMAIN_MANAGED_PORT@@/${WLVM_SERVER_MANAGED_PORT}/g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@DOMAIN_USERNAME@@/${WLVM_DOMAIN_USERNAME}/g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@DOMAIN_PASSWORD@@/${WLVM_DOMAIN_PASSWORD}/g" ${mydeploy}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi

sed -i -e "s/@@DB_PWD_STG@@/${DB_PWD_STG}/g" ${mydeploy}/model.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s|@@DB_URL@@|${DB_URL}|g" ${mydeploy}/model.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@CLUSTER_SIZE@@/${myclustersize}/g" ${mydeploy}/model.properties
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s/@@RESOURCE_TARGET@@/${myresourcetarget}/g" ${mydeploy}/model.properties
if [ ${?} -ne 0 ]; then exit 1; fi

mystatus=0
pushd ${mydeploy}
zip -r model wlsdeploy
if [ ${?} -ne 0 ]; then mystatus=1; fi
popd
if [ ${mystatus} -ne 0 ]; then exit 1; fi
rm -r ${mywlsdeploy}
if [ ${?} -ne 0 ]; then exit 1; fi

pushd ${mydeploy}
unzip weblogic-deploy.zip
if [ ${?} -ne 0 ]; then mystatus=1; fi
popd
if [ ${mystatus} -ne 0 ]; then exit 1; fi
rm ${mydeploy}/weblogic-deploy.zip
if [ ${?} -ne 0 ]; then exit 1; fi

# Exit gracefully

exit 0
*******************************************************************************************************************************
package 
#! /bin/sh

# Package domain

./package-${WLVM_PACKAGE_TOOL}.sh
if [ ${?} -ne 0 ]; then exit 1; fi

# Exit gracefully

exit 0

************************************************************************************************************************************
kill#!/bin/bash

###########################################################################
## Kill Servers
###########################################################################

HOSTNAME=`hostname`
HOST_PREFIX=`echo $HOSTNAME | cut -c1-8`
case $HOST_PREFIX in

    'u1062546'|'u1064310'|'u1064309'|'u1064311'|'u1064312'|'u1064637'|'u1064638'|'u1059926'|'u1060169'|'u1060168'|'u1060414'|'u1059987'|'u1060171'|'u1059991')
    
    	if [[ $HOST_PREFIX = u1064310 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi
        fi
	if [[ $HOST_PREFIX = u1064309 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi
        fi
	if [[ $HOST_PREFIX = u1064311 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"	
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi			     
        fi
	if [[ $HOST_PREFIX = u1064312 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi
        fi
	if [[ $HOST_PREFIX = u1064637 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi
        fi
	if [[ $HOST_PREFIX = u1064638 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi
        fi
	if [[ $HOST_PREFIX = u1062546 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi    
        fi
		
    	if [[ $HOST_PREFIX = u1060169 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi
        fi
	if [[ $HOST_PREFIX = u1060168 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi
        fi
	if [[ $HOST_PREFIX = u1060414 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"	
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi			     
        fi
	if [[ $HOST_PREFIX = u1059987 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi
        fi
	if [[ $HOST_PREFIX = u1060171 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi
        fi
	if [[ $HOST_PREFIX = u1059991 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi
        fi
	if [[ $HOST_PREFIX = u1059926 ]]
	then
			PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
			#Check if the PID is empty
			if [[ -z "$PID" ]]; then
			     echo "Weblogic is not running!"
			else
			     echo "Weblogic is running with PID: $PID"
			     PID=$(ps aux | grep [w]eblogic.Server | awk '{print $2}')
				   kill -9 $PID
			     fi
			fi    
        fi
	
    ;;     
    *)
        echo "Unknown network address - Exiting"
        exit 1
    ;;
esac

**********************************************************************************************************************
env-wlst
export JAVA_HOME=@@JAVA_HOME@@
export ORACLE_HOME=@@ORACLE_HOME@@
export WL_HOME=${ORACLE_HOME}/wlserver
export WLVM_HOME=@@WLVM_HOME@@
export DOMAIN_ENVIRONMENT=@@DOMAIN_ENVIRONMENT@@
export DOMAIN_STAGE=@@DOMAIN_STAGE@@
export DOMAIN_DEPLOY=@@DOMAIN_DEPLOY@@
export DOMAIN_PARENT=@@DOMAIN_PARENT@@
export DOMAIN_HOME=@@DOMAIN_HOME@@
export DOMAIN_APPLICATION=${DOMAIN_DEPLOY}/app
export DOMAIN_CLASSPATH=${DOMAIN_DEPLOY}/lib
export DOMAIN_CONTROL=${DOMAIN_DEPLOY}/bin
export DOMAIN_VAR=@@DOMAIN_VAR@@
************************************************************************************************************************

env-wdt
export JAVA_HOME=@@JAVA_HOME@@
export ORACLE_HOME=@@ORACLE_HOME@@
export WLVM_HOME=@@WLVM_HOME@@
export WDT_HOME=@@WDT_HOME@@
export DOMAIN_ENVIRONMENT=@@DOMAIN_ENVIRONMENT@@
export DOMAIN_STAGE=@@DOMAIN_STAGE@@
export DOMAIN_PARENT=@@DOMAIN_PARENT@@
export DOMAIN_HOME=@@DOMAIN_HOME@@
export DOMAIN_DEPLOY=@@DOMAIN_DEPLOY@@
export DOMAIN_CLASSPATH=${DOMAIN_DEPLOY}/classpathLibraries
export DOMAIN_CONTROL=${DOMAIN_HOME}/bin
export DOMAIN_VAR=@@DOMAIN_VAR@@
*************************************************************************************************************************
create,sh
#! /bin/sh
set +x
# Create domain

mystatus=0
pushd ${DOMAIN_STAGE}
. ./env.sh
./create.sh ${DOMAIN_ENVIRONMENT}
if [ ${?} -ne 0 ]; then mystatus=1; fi
popd
if [ ${mystatus} -ne 0 ]; then exit 1; fi

# Exit gracefully

exit 0


*************************************************************************************************************************************
clean.sh
#! /bin/sh

# Clean domain

if [ -d ${DOMAIN_PARENT} ]; then
  rm -r ${DOMAIN_PARENT}
  if [ ${?} -ne 0 ]; then exit 1; fi
fi

# Exit gracefully

exit 0


***************************************************************************************************************************

build.sh
#! /bin/sh

# Pre-build application

if [ -d ${WLVM_PACKAGE} ]; then
  rm -r ${WLVM_PACKAGE}
  if [ ${?} -ne 0 ]; then exit 1; fi
fi

mkdir -p ${WLVM_PACKAGE}
if [ ${?} -ne 0 ]; then exit 1; fi

cp ${WLVM_ROOT}/build/Shared/bin/env.sh ${WLVM_PACKAGE}
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@JAVA_HOME@@:${JAVA_HOME}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi
sed -i -e "s:@@WEBLOGIC_HOME@@:${WL_HOME}:g" ${WLVM_PACKAGE}/env.sh
if [ ${?} -ne 0 ]; then exit 1; fi

# Build application

mystatus=0
pushd ${WLVM_ROOT}/build/Shared/bin
. ${WLVM_PACKAGE}/env.sh
./build.sh ${WLVM_TARGET} MTP
if [ ${?} -ne 0 ]; then mystatus=1; fi
popd
if [ ${mystatus} -ne 0 ]; then exit 1; fi

# Post-build application

rm -r ${WLVM_PACKAGE}
if [ ${?} -ne 0 ]; then exit 1; fi

# Exit gracefully

exit 0


**************************************************************************************************************
beforescript
#! /bin/sh

cd /opt/fedex/genesis/gendom

#copy tar file from tmp to here.
cp /var/fedex/genesis/gendom/*.war

chmod 644 *.ear
chmod 644 *.war

sed -i -e "s/@RELEASE@/2200/g" after_inst_script
if [ ${?} -ne 0 ]; then exit 1; fi


cp opt/fedex/genesis/gendom/current/bin*.war /opt/fedex/genesis/gendom/current/bin/
// cp /opt/fedex/genesis/gendom/bin/*.ear /opt/fedex/genesis/gendom/domain/usgendomDomain/applications/



sed -i -e "s/@RELEASE@/2200/g" after_inst_script
if [ ${?} -ne 0 ]; then exit 1; fi



sed -i -e "s/@RELEASE@/2200/g" after_inst_script
if [ ${?} -ne 0 ]; then exit 1; fi



sed -i -e "s/@RELEASE@/2200/g" after_inst_script
if [ ${?} -ne 0 ]; then exit 1; fi



sed -i -e "s/@RELEASE@/2200/g" after_inst_script
if [ ${?} -ne 0 ]; then exit 1; fi

#rm -rf current
#ln -s 2200 current
